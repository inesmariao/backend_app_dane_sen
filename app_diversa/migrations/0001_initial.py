# Generated by Django 5.1.3 on 2024-11-29 22:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_geo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del capítulo.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Descripción opcional del capítulo.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del capítulo.')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre de la encuesta. Máximo 255 caracteres.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Descripción detallada de la encuesta. Opcional.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la encuesta.')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the survey text.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the survey text.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if this text is active.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the text was created.')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Texto de la pregunta. Máximo 255 caracteres.', max_length=255)),
                ('instruction', models.TextField(blank=True, help_text='Instrucción para el usuario sobre cómo responder la pregunta. Opcional.', null=True)),
                ('is_geographic', models.BooleanField(default=False, help_text='Indica si la pregunta requiere selección geográfica.')),
                ('geography_type', models.CharField(blank=True, choices=[('COUNTRY', 'País'), ('DEPARTMENT', 'Departamento'), ('MUNICIPALITY', 'Municipio')], help_text='Especifica el nivel geográfico (país, departamento o municipio).', max_length=20, null=True)),
                ('question_type', models.CharField(choices=[('open', 'Pregunta Abierta'), ('closed', 'Pregunta Cerrada'), ('likert', 'Escala Likert'), ('rating', 'Escala de Puntuación'), ('matrix', 'Pregunta Matricial')], help_text="Tipo de la pregunta, por ejemplo: 'open', 'closed', etc.", max_length=10)),
                ('is_required', models.BooleanField(default=False, help_text='Indica si la respuesta a esta pregunta es obligatoria.')),
                ('data_type', models.CharField(blank=True, help_text="Tipo de dato esperado, por ejemplo: 'integer', 'string', etc. Opcional.", max_length=50, null=True)),
                ('min_value', models.IntegerField(blank=True, help_text='Valor mínimo permitido para respuestas numéricas. Opcional.', null=True)),
                ('max_value', models.IntegerField(blank=True, help_text='Valor máximo permitido para respuestas numéricas. Opcional.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la pregunta.')),
                ('chapter', models.ForeignKey(blank=True, help_text='Capítulo al que pertenece esta pregunta. Puede ser nulo si no está asociado a un capítulo.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='app_diversa.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Texto de la opción. Máximo 255 caracteres.', max_length=255)),
                ('is_other', models.BooleanField(default=False, help_text="Indica si esta opción representa la respuesta 'Otro'.")),
                ('note', models.TextField(blank=True, help_text='Nota aclaratoria para esta opción. Opcional.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la opción.')),
                ('question', models.ForeignKey(help_text='Pregunta a la que pertenece esta opción.', on_delete=django.db.models.deletion.CASCADE, related_name='options', to='app_diversa.question')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField(blank=True, help_text='Texto proporcionado como respuesta. Opcional.', null=True)),
                ('response_number', models.IntegerField(blank=True, help_text='Número proporcionado como respuesta. Opcional.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se registró la respuesta.')),
                ('country', models.ForeignKey(blank=True, help_text='País seleccionado.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_geo.country')),
                ('department', models.ForeignKey(blank=True, help_text='Departamento seleccionado.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_geo.department')),
                ('municipality', models.ForeignKey(blank=True, help_text='Municipio seleccionado.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_geo.municipality')),
                ('option_selected', models.ForeignKey(blank=True, help_text='Opción seleccionada para preguntas cerradas. Opcional.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_diversa.option')),
                ('question', models.ForeignKey(help_text='Pregunta a la que corresponde esta respuesta.', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='app_diversa.question')),
            ],
        ),
    ]
