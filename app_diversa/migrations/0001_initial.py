# Generated by Django 5.1.3 on 2025-02-11 15:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_geo', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del capítulo.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Descripción opcional del capítulo.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del capítulo.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora en que se actualizó el capítulo.')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre de la encuesta, se muestra en el encabezado de la encuesta. Máximo 255 caracteres.', max_length=255)),
                ('description_name', models.TextField(blank=True, help_text='Descripción detallada de la encuesta, se muestra debajo del name en el encabezado de la encuesta. Opcional.', null=True)),
                ('title', models.CharField(default='TÍTULO POR DEFECTO', help_text='Título de la encuesta que se muestra en las cards del índice. Obligatorio.', max_length=255)),
                ('description_title', models.TextField(blank=True, help_text='Descripción del título de la encuesta que se muestra en las cards del índice.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la encuesta.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora en que se actualizó la encuesta.')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_question', models.PositiveIntegerField(default=0, help_text='Orden de la pregunta dentro de la encuesta.')),
                ('text_question', models.CharField(help_text='Texto de la pregunta. Máximo 255 caracteres.', max_length=255)),
                ('instruction', models.TextField(blank=True, help_text='Instrucción para el usuario sobre cómo responder la pregunta. Opcional.', null=True)),
                ('is_geographic', models.BooleanField(default=False, help_text='Indica si la pregunta requiere selección geográfica.')),
                ('geography_type', models.CharField(blank=True, choices=[('COUNTRY', 'País'), ('DEPARTMENT', 'Departamento'), ('MUNICIPALITY', 'Municipio')], help_text='Especifica el nivel geográfico (país, departamento o municipio).', max_length=20, null=True)),
                ('question_type', models.CharField(choices=[('open', 'Pregunta Abierta'), ('closed', 'Pregunta Cerrada'), ('likert', 'Escala Likert'), ('rating', 'Escala de Puntuación'), ('matrix', 'Pregunta Matricial')], help_text="Tipo de la pregunta, por ejemplo: 'open', 'closed', etc.", max_length=10)),
                ('matrix_layout_type', models.CharField(blank=True, choices=[('row', 'Matriz - Fila'), ('column', 'Matriz - Columna')], help_text="Diseño para preguntas tipo matriz: 'Fila' (row) u 'Columna' (column).", max_length=10, null=True)),
                ('data_type', models.CharField(blank=True, help_text="Tipo de dato esperado, por ejemplo: 'integer', 'string', etc. Opcional.", max_length=50, null=True)),
                ('min_value', models.IntegerField(blank=True, help_text='Valor mínimo permitido para respuestas numéricas. Opcional.', null=True)),
                ('max_value', models.IntegerField(blank=True, help_text='Valor máximo permitido para respuestas numéricas. Opcional.', null=True)),
                ('is_multiple', models.BooleanField(default=False, help_text='Indica si la pregunta permite seleccionar múltiples opciones.')),
                ('is_required', models.BooleanField(default=False, help_text='Indica si la respuesta a esta pregunta es obligatoria.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la pregunta.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora en que se actualizó la pregunta.')),
                ('chapter', models.ForeignKey(blank=True, help_text='Capítulo al que pertenece esta pregunta. Puede ser nulo si no está asociado a un capítulo.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='app_diversa.chapter')),
                ('survey', models.ForeignKey(help_text='Encuesta a la que pertenece esta pregunta.', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='app_diversa.survey')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_type', models.CharField(blank=True, choices=[('COUNTRY', 'País'), ('DEPARTMENT', 'Departamento'), ('MUNICIPALITY', 'Municipio')], help_text='Especifica el tipo de esta opción.', max_length=20, null=True)),
                ('text_option', models.CharField(help_text='Texto de la opción. Máximo 255 caracteres.', max_length=255)),
                ('is_other', models.BooleanField(default=False, help_text="Indica si esta opción representa la respuesta 'Otro'.")),
                ('note', models.TextField(blank=True, help_text='Nota aclaratoria para esta opción. Opcional.', null=True)),
                ('order_option', models.PositiveIntegerField(default=0, help_text='Orden de la opción.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la opción.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora en que se actualizó la opción.')),
                ('question', models.ForeignKey(blank=True, help_text='Pregunta a la que pertenece esta opción. Dejar en blanco si pertenece a una subpregunta.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='options', to='app_diversa.question')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField(blank=True, help_text='Texto proporcionado como respuesta. Opcional.', null=True)),
                ('response_number', models.IntegerField(blank=True, help_text='Número proporcionado como respuesta. Opcional.', null=True)),
                ('options_multiple_selected', models.JSONField(blank=True, help_text='Opciones seleccionadas para preguntas de selección múltiple (almacenadas como JSON).', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se registró la respuesta.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora en que se actualizó la respuesta.')),
                ('country', models.ForeignKey(blank=True, help_text='País seleccionado.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_geo.country')),
                ('department', models.ForeignKey(blank=True, help_text='Departamento seleccionado.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_geo.department')),
                ('municipality', models.ForeignKey(blank=True, help_text='Municipio seleccionado.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_geo.municipality')),
                ('option_selected', models.ForeignKey(blank=True, help_text='Opción seleccionada para preguntas cerradas. Opcional.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_diversa.option')),
                ('question', models.ForeignKey(help_text='Pregunta a la que corresponde esta respuesta.', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='app_diversa.question')),
                ('user', models.ForeignKey(help_text='Usuario que proporcionó esta respuesta.', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_identifier', models.CharField(blank=True, help_text='Identificador personalizado para la subpregunta, como 17.1 o 18.2. Opcional, pero único si se usa.', max_length=20, null=True, unique=True)),
                ('subquestion_order', models.PositiveIntegerField(default=0, help_text='Orden de la subpregunta dentro de la pregunta principal.')),
                ('text_subquestion', models.CharField(help_text='Texto de la subpregunta. Máximo 255 caracteres.', max_length=255)),
                ('instruction', models.TextField(blank=True, help_text='Instrucción específica para la subpregunta. Opcional.', null=True)),
                ('subquestion_type', models.CharField(choices=[('open', 'Pregunta Abierta'), ('closed', 'Pregunta Cerrada'), ('likert', 'Escala Likert'), ('rating', 'Escala de Puntuación')], help_text="Tipo de la subpregunta, por ejemplo: 'open', 'closed', etc.", max_length=10)),
                ('min_value', models.IntegerField(blank=True, help_text='Valor mínimo permitido para respuestas numéricas. Opcional.', null=True)),
                ('max_value', models.IntegerField(blank=True, help_text='Valor máximo permitido para respuestas numéricas. Opcional.', null=True)),
                ('is_multiple', models.BooleanField(default=False, help_text='Indica si la subpregunta permite seleccionar múltiples opciones.')),
                ('is_required', models.BooleanField(default=False, help_text='Indica si la respuesta a esta subpregunta es obligatoria.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la subpregunta.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora en que se actualizó la subpregunta.')),
                ('parent_question', models.ForeignKey(help_text='Pregunta principal a la que pertenece esta subpregunta.', on_delete=django.db.models.deletion.CASCADE, related_name='subquestions', to='app_diversa.question')),
            ],
        ),
        migrations.AddField(
            model_name='option',
            name='subquestion',
            field=models.ForeignKey(blank=True, help_text='Subpregunta a la que pertenece esta opción. Dejar en blanco si pertenece a una pregunta.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='options', to='app_diversa.subquestion'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='survey',
            field=models.ForeignKey(help_text='Encuesta a la que pertenece este capítulo.', on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='app_diversa.survey'),
        ),
        migrations.CreateModel(
            name='SurveyText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the survey text.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the survey text.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if this text is active.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the text was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora en que se actualizó el texto.')),
                ('survey', models.ForeignKey(help_text='Survey to which this text belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='app_diversa.survey')),
            ],
        ),
    ]
